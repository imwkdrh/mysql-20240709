1. DBMS란 무엇인지 설명하시오.
DBMS는 Database Management System의 약자로 데이터베이스 관리 시스템을 의미한다. 데이터베이스 관리 시스템은 데이터를 효과적으로 저장, 관리, 검색할 수 있게 하는 소프트웨어이다.
 


2. DBMS의 필요성에 대해 나열하고 설명하시오.
- 중복 제어: 데이터베이스에서 동일한 데이터가 반복적으로 저장되는 것을 방지한다. 이를 통해 저장 공간을 효율적으로 사용할 수 있으며, 데이터의 일관성을 유지할 수 있다.

- 데이터 공유: 여러 사용자가 동시에 같은 데이터에 접근하고 사용할 수 있게 한다.

- 데이터 보안: 중요한 데이터에 대한 접근 권한을 관리하여, 비인가 사용자의 접근을 제한한다.

- 데이터 무결성: 데이터베이스 내의 데이터가 항상 올바르고, 일관된 상태를 유지하도록 도와준다.

- 백업 및 복구: 데이터 손실에 대비하여 백업을 생성하고, 필요시 복구를 수행할 수 있다.
 

 

3. DBMS의 종류에 대해 나열하고 설명하시오.
- 관계형 DBMS(RDBMS): 가장 널리 사용되는 DBMS로, 데이터를 표(Table) 형태로 저장한다. 대표적으로 MySQL, Oracle, PostgreSQL 등이 있다.

- 객체지향 DBMS(OODBMS): 객체지향 프로그래밍 언어와 호환되는 DBMS이다. 데이터를 객체(object) 형태로 저장하며, 복잡한 데이터 구조를 효율적으로 관리할 수 있다.

- NoSQL DBMS: Not only SQL의 약자로, 관계형 DBMS의 한계를 극복하기 위해 만들어진 DBMS이다. 대규모 분산 클러스터 환경에서 사용된다.
 

 

4. RDBMS의 구성요소에 대해 나열하고 설명하시오.
- 데이터베이스(Database): 데이터베이스는 서로 관련된 데이터의 집합으로, 이를 구성하는 여러 개의 테이블, 인덱스, 뷰, 저장 프로시저 등을 포함할 수 있다. 데이터베이스는 이러한 요소들을 통해 데이터를 효율적으로 저장, 검색, 변경, 삭제할 수 있다.

- 테이블(Table): 테이블은 데이터베이스 내에서 데이터를 저장하는 기본 단위로, 행(row)과 열(column)로 구성된 2차원의 구조를 가진다. 테이블의 각 행은 개별적인 데이터 항목(레코드)을, 각 열은 그 항목의 속성을 나타낸다.

- 컬럼(Column): 컬럼은 테이블의 열을 나타낸다. 각 컬럼은 특정 타입의 데이터를 포함하며, 테이블 내에서 유일한 이름을 가집니다. 예를 들어, '사원' 테이블에서 컬럼은 '사원번호', '이름', '직급', '급여' 등이 될 수 있다.

- 로우(Row) 또는 레코드(Record): 로우 또는 레코드는 테이블의 행을 나타내며, 특정 엔티티의 인스턴스를 나타낸다. 예를 들어, '사원' 테이블에서 한 사람의 정보(사원번호, 이름, 직급, 급여 등)는 하나의 로우 또는 레코드로 표현된다.

- 필드(Field): 필드는 특정 로우와 컬럼이 만나는 지점에 위치한 개별 데이터 값을 나타낸다. 예를 들어, '사원' 테이블에서 특정 사원의 '이름'을 가리키는 데이터 값이 필드가 될 수 있다.

- 관계(Relationship): 관계는 RDBMS의 핵심 요소로, 서로 다른 테이블 사이의 연결을 나타낸다. 관계는 주로 외래 키(Foreign Key)를 사용하여 표현되며, 이를 통해 데이터의 일관성과 무결성을 유지하고, 데이터베이스 내에서 효율적인 데이터 조작을 가능하게 한다.
 

 

5. RDBMS에서 SQL의 종류에 대해 나열하고 설명하시오.
DDL : 데이터베이스 구조를 정의하거나 수정하는데 사용됨. 테이블,인덱스,뷰 등의 데이터베이스 개체를 생성, 변경, 삭제할 수 있다. 데이터베이스 구조를 정의하고 관리하는데 사용되며, DDL 명령어를 실행 즉시 데이터베이스에 반영된다. 롤백 불가능

DML : 데이터베이스에 저장된 데이터를 조회, 추가, 수정, 삭제하는데 사용됨. SELECT, INSERT, UPDATE, DELETE 등의 명령어를 포함. DML 명령어를 사용하여 데이터베이스에 저장된 실제 데이터에 대한 조작이 가능, 롤백 가능. 

DCL : 데이터베이스에 접근하고 객체에 권한을 부여하거나 회수하는데 사용됨. 데이터베이스 보안과 무결성을 관리하는 역할. GRANT, REVOKE 등을 포함함. 특정 사용자에게 데이터베이스 객체에 대한 접근 권한을 부여하거나 회수하는 기능을 수행.
